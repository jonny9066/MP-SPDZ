

a1 = sint.get_input_from(0)
a2 = sint.get_input_from(0)
b1 = sint.get_input_from(1)
b2 = sint.get_input_from(1)
ar1, ar2, br1, br2  = a1.reveal(), a2.reveal(), b1.reveal(),b2.reveal()
print_ln('got inputs, p1: %s, %s, p2: %s, %s',ar1, ar2, br1, br2)


def my_xor(x1, x2):
    # t1 = x1 - x2
    # t2 = x1 - x2
    # res = t1*t2
    return (x1 - x2)*(x1 - x2)


def my_inv(x1):
    return a1 - x1

def my_and(x1, x2):
    # t1 = sint(0)
    # t2 = sint(0)
    # t1 = t1+x1
    # t2 = t2+x2
    return x1*x2

# got inputs, p1: 1, 0, p2: 1, 0

# print_ln('0 XOR 0: %s', my_xor(a2, b2).reveal())
# print_ln('1 XOR 0: %s', my_xor(a2, b1).reveal())
# print_ln('0 XOR 1: %s', my_xor(a1, b2).reveal())
# print_ln('1 XOR 1: %s', my_xor(a1, b1).reveal())

print_ln('0 AND 0: %s', my_and(a2, b2).reveal())
print_ln('1 AND 0: %s', my_and(a2, b1).reveal())
print_ln('0 AND 1: %s', my_and(a1, b2).reveal())

# print_ln('1 AND 1: %s', my_and(a1, b1).reveal())
# print_ln('INV 0: %s', my_inv(a2).reveal())
# print_ln('INV 1: %s', my_inv(a1).reveal())

# r1 = my_xor(a1,b1)
# r2 = my_xor(a2, b1)
# r3 = my_xor(r1, r2)
# r4 = my_xor(r1, r3)
# r5 = my_inv(r4)
# print_ln('r1: %s', r1.reveal())
# print_ln('r2: %s', r2.reveal())
# print_ln('r3: %s', r3.reveal())
# print_ln('r4: %s', r4.reveal())
# print_ln('r5: %s', r5.reveal())




